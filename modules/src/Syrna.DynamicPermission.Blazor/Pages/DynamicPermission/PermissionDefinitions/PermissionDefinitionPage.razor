@page "/DynamicPermission/PermissionDefinitions/PermissionDefinition"
@using Syrna.DynamicPermission.PermissionDefinitions
@using Syrna.DynamicPermission.PermissionDefinitions.Dtos
@using Syrna.DynamicPermission.Localization
@using Syrna.DynamicPermission.Permissions
@using Volo.Abp.Application.Dtos
@using Volo.Abp.BlazoriseUI.Components
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.BlazoriseUI.Components.ObjectExtending
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@inject AbpBlazorMessageLocalizerHelper<DynamicPermissionResource> LH

@attribute [Authorize(DynamicPermissionPermissions.PermissionDefinition.Default)]
@inherits AbpCrudPageBase<IPermissionDefinitionAppService, PermissionDefinitionDto, string, PagedAndSortedResultRequestDto, CreatePermissionDefinitionDto, UpdatePermissionDefinitionDto>
<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <PageHeader Title="@L["Menu:PermissionDefinition"]"
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar">
        </PageHeader>
    </CardHeader>
    <CardBody>
        @* ************************* DATA GRID ************************* *@
        <AbpExtensibleDataGrid TItem="PermissionDefinitionDto"
                               Data="@Entities"
                               ReadData="@OnDataGridReadAsync"
                               TotalItems="@TotalCount"
                               ShowPager="true"
                               PageSize="@PageSize"
                               CurrentPage="@CurrentPage"
                               Columns="@PermissionDefinitionTableColumns">
        </AbpExtensibleDataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal @ref="CreateModal" Closing="@ClosingCreateModal">
        <ModalContent Centered="true">
            <Form>
                <ModalHeader>
                    <ModalTitle>@L["NewPermissionDefinition"]</ModalTitle>
                    <CloseButton Clicked="CloseCreateModalAsync" />
                </ModalHeader>
                <ModalBody>
                    <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionId"] *</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.Id" Autofocus="true">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionDisplayName"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.DisplayName" Autofocus="true">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionDescription"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.Description" Autofocus="true">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <ExtensionProperties TEntityType="CreatePermissionDefinitionDto" TResourceType="DynamicPermissionResource" Entity="@NewEntity" LH="@LH" ModalType="ExtensionPropertyModalType.CreateModal" />
                        <Field>
                            <Check TValue="bool" @bind-Checked="@NewEntity.IsPublic">@L["PermissionDefinitionIsPublic"]</Check>
                        </Field>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Primary" Outline Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                    <SubmitButton Clicked="@CreateEntityAsync" />
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}
@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal @ref="EditModal" Closing="@ClosingEditModal">
        <ModalContent Centered="true">
            <Form>
                <ModalHeader>
                    <ModalTitle>@L["Edit"]</ModalTitle>
                    <CloseButton Clicked="CloseEditModalAsync" />
                </ModalHeader>
                <ModalBody>
                    <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                        <input type="hidden" name="ConcurrencyStamp" @bind-value="EditingEntity.ConcurrencyStamp" />
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionId"] *</FieldLabel>
                                <TextEdit @bind-Text="EditingEntity.Id" Autofocus="true" Disabled>
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionDisplayName"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.DisplayName" Autofocus="true">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["PermissionDefinitionDescription"]</FieldLabel>
                                <TextEdit @bind-Text="EditingEntity.Description" Autofocus="true">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <ExtensionProperties TEntityType="UpdatePermissionDefinitionDto" TResourceType="DynamicPermissionResource" Entity="@EditingEntity" LH="@LH" ModalType="ExtensionPropertyModalType.EditModal" />
                        <Field>
                            <Check TValue="bool" @bind-Checked="@EditingEntity.IsPublic">@L["PermissionDefinitionIsPublic"]</Check>
                        </Field>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Primary" Outline Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                    <SubmitButton Clicked="@UpdateEntityAsync" />
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}